#ifndef _HMI_H_
#define _HMI_H_

#ifndef _HMI_C_
#define _HMI_    extern
#else
#define _HMI_ 
#endif

#if D_DEBUG_HMI && D_PRINT_EN
#define hmi_printf(x)  x
#else
#define hmi_printf(x)
#endif



//Audio setting Index
typedef enum
{
    SETTING_ID_AUDIO_SW_ON_OFF = 0,

    SETTING_ID_AUDIO_SW_CUT_OFF_FREQ,        
    SETTING_ID_AUDIO_SW_LEVEL,     
    SETTING_ID_AUDIO_SW_SLOPE,
    SETTING_ID_AUDIO_LOUDNESS_MODE,
    SETTING_ID_AUDIO_LOUD_BASS_CUT_OFF_FREQ,
    SETTING_ID_AUDIO_LOUD_TREBLE_CEN_FREQ,    
    SETTING_ID_AUDIO_FADE,            
    SETTING_ID_AUDIO_BALANCE,        
    SETTING_ID_AUDIO_BASS_GAIN,        
    SETTING_ID_AUDIO_MIDDLE_GAIN,                
    SETTING_ID_AUDIO_TREBLE_GAIN,
    SETTING_ID_AUDIO_BASS_CENTRE_FREQ,
    SETTING_ID_AUDIO_MIDDLE_CENTRE_FREQ,
    SETTING_ID_AUDIO_TREBLE_CENTRE_FREQ,    
    SETTING_ID_AUDIO_BASS_Q,                    
    SETTING_ID_AUDIO_MIDDLE_Q,
    SETTING_ID_AUDIO_TREBLE_Q,

    SETTING_ID_AUDIO_INDEX_MAX
}AUDIO_SETTING_INDEX_ENUM;

//ASP Setting Index
typedef enum
{
    //Delay Line
    SETTING_ID_DSP_DELAY_LINE_MODE = 0,            
    SETTING_ID_DSP_DELAY_LINE_FL,
    SETTING_ID_DSP_DELAY_LINE_FR,
    SETTING_ID_DSP_DELAY_LINE_RL,
    SETTING_ID_DSP_DELAY_LINE_RR,
    SETTING_ID_DSP_DELAY_LINE_SWL,
    SETTING_ID_DSP_DELAY_LINE_SWR,            

    //DC Filter
    SETTING_ID_DSP_DC_FILTER,                

    //Phase Shifter
    SETTING_ID_DSP_FL_PHASE_SHIFTER,
    SETTING_ID_DSP_FR_PHASE_SHIFTER,
    SETTING_ID_DSP_RL_PHASE_SHIFTER,
    SETTING_ID_DSP_RR_PHASE_SHIFTER,
    SETTING_ID_DSP_SWL_PHASE_SHIFTER,
    SETTING_ID_DSP_SWR_PHASE_SHIFTER,        

    //Cross Over
    SETTING_ID_DSP_CROSS_OVER_MODE,
    SETTING_ID_DSP_F_CROSS_OVER_LEVEL,
    SETTING_ID_DSP_F_CROSS_OVER_CUT_FREQ,
    SETTING_ID_DSP_F_CROSS_OVER_SLOPE,
    SETTING_ID_DSP_R_CROSS_OVER_LEVEL,
    SETTING_ID_DSP_R_CROSS_OVER_CUT_FREQ,
    SETTING_ID_DSP_R_CROSS_OVER_SLOPE,
    SETTING_ID_DSP_SW_CROSS_OVER_LEVEL,
    SETTING_ID_DSP_SW_CROSS_OVER_CUT_FREQ,
    SETTING_ID_DSP_SW_CROSS_OVER_SLOPE,

    //Ultra Bass
    SETTING_ID_DSP_ULTRA_BASS_MODE,
    SETTING_ID_DSP_ULTRA_BASS_LEVEL,

    SETTING_ID_ASP_INDEX_MAX    
}ASP_SETTING_INDEX_ENUM;



//GEQ Setting Index
typedef enum
{
    SETTING_ID_DSP_GEQ_MODE         = 0,
    SETTING_ID_DSP_GEQ_BAND1_GAIN,            // 1
    SETTING_ID_DSP_GEQ_BAND2_GAIN,
    SETTING_ID_DSP_GEQ_BAND3_GAIN,
    SETTING_ID_DSP_GEQ_BAND4_GAIN,
    SETTING_ID_DSP_GEQ_BAND5_GAIN,        
    SETTING_ID_DSP_GEQ_BAND6_GAIN,
    SETTING_ID_DSP_GEQ_BAND7_GAIN,
    SETTING_ID_DSP_GEQ_BAND8_GAIN,
    SETTING_ID_DSP_GEQ_BAND9_GAIN,            // 9

    SETTING_ID_DSP_GEQ_BAND1_CEN_FREQ,        // 10
    SETTING_ID_DSP_GEQ_BAND2_CEN_FREQ,
    SETTING_ID_DSP_GEQ_BAND3_CEN_FREQ,
    SETTING_ID_DSP_GEQ_BAND4_CEN_FREQ,
    SETTING_ID_DSP_GEQ_BAND5_CEN_FREQ,
    SETTING_ID_DSP_GEQ_BAND6_CEN_FREQ,        
    SETTING_ID_DSP_GEQ_BAND7_CEN_FREQ,
    SETTING_ID_DSP_GEQ_BAND8_CEN_FREQ,
    SETTING_ID_DSP_GEQ_BAND9_CEN_FREQ,        // 18
    
    SETTING_ID_DSP_GEQ_BAND1_Q,                // 19
    SETTING_ID_DSP_GEQ_BAND2_Q,            
    SETTING_ID_DSP_GEQ_BAND3_Q,
    SETTING_ID_DSP_GEQ_BAND4_Q,
    SETTING_ID_DSP_GEQ_BAND5_Q,
    SETTING_ID_DSP_GEQ_BAND6_Q,
    SETTING_ID_DSP_GEQ_BAND7_Q,            
    SETTING_ID_DSP_GEQ_BAND8_Q,
    SETTING_ID_DSP_GEQ_BAND9_Q,                // 27

    SETTING_ID_GEQ_INDEX_MAX
}GEQ_SETTING_INDEX_ENUM;

//PEQ Setting Index
typedef enum
{
    SETTING_ID_CAR_TYPE                = 0,
    SETTING_ID_DSP_PEQ_MODE,    

    //Front Left
    SETTING_ID_DSP_FL_PEQ_BAND1_GAIN,        // 
    SETTING_ID_DSP_FL_PEQ_BAND2_GAIN,        
    SETTING_ID_DSP_FL_PEQ_BAND3_GAIN,
    SETTING_ID_DSP_FL_PEQ_BAND4_GAIN,
    SETTING_ID_DSP_FL_PEQ_BAND5_GAIN,
    SETTING_ID_DSP_FL_PEQ_BAND6_GAIN,
    SETTING_ID_DSP_FL_PEQ_BAND7_GAIN,        
    SETTING_ID_DSP_FL_PEQ_BAND8_GAIN,
    SETTING_ID_DSP_FL_PEQ_BAND9_GAIN,
    SETTING_ID_DSP_FL_PEQ_BAND10_GAIN,
    SETTING_ID_DSP_FL_PEQ_BAND11_GAIN,        

    SETTING_ID_DSP_FL_PEQ_BAND1_CEN_FREQ,    
    SETTING_ID_DSP_FL_PEQ_BAND2_CEN_FREQ,
    SETTING_ID_DSP_FL_PEQ_BAND3_CEN_FREQ,
    SETTING_ID_DSP_FL_PEQ_BAND4_CEN_FREQ,
    SETTING_ID_DSP_FL_PEQ_BAND5_CEN_FREQ,
    SETTING_ID_DSP_FL_PEQ_BAND6_CEN_FREQ,
    SETTING_ID_DSP_FL_PEQ_BAND7_CEN_FREQ,
    SETTING_ID_DSP_FL_PEQ_BAND8_CEN_FREQ,
    SETTING_ID_DSP_FL_PEQ_BAND9_CEN_FREQ,
    SETTING_ID_DSP_FL_PEQ_BAND10_CEN_FREQ,
    SETTING_ID_DSP_FL_PEQ_BAND11_CEN_FREQ,    

    SETTING_ID_DSP_FL_PEQ_BAND1_Q,            
    SETTING_ID_DSP_FL_PEQ_BAND2_Q,
    SETTING_ID_DSP_FL_PEQ_BAND3_Q,
    SETTING_ID_DSP_FL_PEQ_BAND4_Q,
    SETTING_ID_DSP_FL_PEQ_BAND5_Q,            
    SETTING_ID_DSP_FL_PEQ_BAND6_Q,
    SETTING_ID_DSP_FL_PEQ_BAND7_Q,
    SETTING_ID_DSP_FL_PEQ_BAND8_Q,
    SETTING_ID_DSP_FL_PEQ_BAND9_Q,
    SETTING_ID_DSP_FL_PEQ_BAND10_Q,            
    SETTING_ID_DSP_FL_PEQ_BAND11_Q,            

    //Front Right
    SETTING_ID_DSP_FR_PEQ_BAND1_GAIN,        
    SETTING_ID_DSP_FR_PEQ_BAND2_GAIN,        
    SETTING_ID_DSP_FR_PEQ_BAND3_GAIN,
    SETTING_ID_DSP_FR_PEQ_BAND4_GAIN,
    SETTING_ID_DSP_FR_PEQ_BAND5_GAIN,
    SETTING_ID_DSP_FR_PEQ_BAND6_GAIN,
    SETTING_ID_DSP_FR_PEQ_BAND7_GAIN,        
    SETTING_ID_DSP_FR_PEQ_BAND8_GAIN,
    SETTING_ID_DSP_FR_PEQ_BAND9_GAIN,
    SETTING_ID_DSP_FR_PEQ_BAND10_GAIN,
    SETTING_ID_DSP_FR_PEQ_BAND11_GAIN,        

    SETTING_ID_DSP_FR_PEQ_BAND1_CEN_FREQ,        
    SETTING_ID_DSP_FR_PEQ_BAND2_CEN_FREQ,
    SETTING_ID_DSP_FR_PEQ_BAND3_CEN_FREQ,
    SETTING_ID_DSP_FR_PEQ_BAND4_CEN_FREQ,
    SETTING_ID_DSP_FR_PEQ_BAND5_CEN_FREQ,
    SETTING_ID_DSP_FR_PEQ_BAND6_CEN_FREQ,        
    SETTING_ID_DSP_FR_PEQ_BAND7_CEN_FREQ,
    SETTING_ID_DSP_FR_PEQ_BAND8_CEN_FREQ,
    SETTING_ID_DSP_FR_PEQ_BAND9_CEN_FREQ,
    SETTING_ID_DSP_FR_PEQ_BAND10_CEN_FREQ,
    SETTING_ID_DSP_FR_PEQ_BAND11_CEN_FREQ,    

    SETTING_ID_DSP_FR_PEQ_BAND1_Q,            
    SETTING_ID_DSP_FR_PEQ_BAND2_Q,
    SETTING_ID_DSP_FR_PEQ_BAND3_Q,
    SETTING_ID_DSP_FR_PEQ_BAND4_Q,
    SETTING_ID_DSP_FR_PEQ_BAND5_Q,            
    SETTING_ID_DSP_FR_PEQ_BAND6_Q,
    SETTING_ID_DSP_FR_PEQ_BAND7_Q,
    SETTING_ID_DSP_FR_PEQ_BAND8_Q,
    SETTING_ID_DSP_FR_PEQ_BAND9_Q,
    SETTING_ID_DSP_FR_PEQ_BAND10_Q,            
    SETTING_ID_DSP_FR_PEQ_BAND11_Q,            

    //Rear Left
    SETTING_ID_DSP_RL_PEQ_BAND1_GAIN,        
    SETTING_ID_DSP_RL_PEQ_BAND2_GAIN,        
    SETTING_ID_DSP_RL_PEQ_BAND3_GAIN,
    SETTING_ID_DSP_RL_PEQ_BAND4_GAIN,
    SETTING_ID_DSP_RL_PEQ_BAND5_GAIN,
    SETTING_ID_DSP_RL_PEQ_BAND6_GAIN,
    SETTING_ID_DSP_RL_PEQ_BAND7_GAIN,        
    SETTING_ID_DSP_RL_PEQ_BAND8_GAIN,
    SETTING_ID_DSP_RL_PEQ_BAND9_GAIN,
    SETTING_ID_DSP_RL_PEQ_BAND10_GAIN,
    SETTING_ID_DSP_RL_PEQ_BAND11_GAIN,        

    SETTING_ID_DSP_RL_PEQ_BAND1_CEN_FREQ,    
    SETTING_ID_DSP_RL_PEQ_BAND2_CEN_FREQ,
    SETTING_ID_DSP_RL_PEQ_BAND3_CEN_FREQ,
    SETTING_ID_DSP_RL_PEQ_BAND4_CEN_FREQ,
    SETTING_ID_DSP_RL_PEQ_BAND5_CEN_FREQ,
    SETTING_ID_DSP_RL_PEQ_BAND6_CEN_FREQ,        
    SETTING_ID_DSP_RL_PEQ_BAND7_CEN_FREQ,
    SETTING_ID_DSP_RL_PEQ_BAND8_CEN_FREQ,
    SETTING_ID_DSP_RL_PEQ_BAND9_CEN_FREQ,
    SETTING_ID_DSP_RL_PEQ_BAND10_CEN_FREQ,
    SETTING_ID_DSP_RL_PEQ_BAND11_CEN_FREQ,    

    SETTING_ID_DSP_RL_PEQ_BAND1_Q,            
    SETTING_ID_DSP_RL_PEQ_BAND2_Q,
    SETTING_ID_DSP_RL_PEQ_BAND3_Q,
    SETTING_ID_DSP_RL_PEQ_BAND4_Q,
    SETTING_ID_DSP_RL_PEQ_BAND5_Q,            
    SETTING_ID_DSP_RL_PEQ_BAND6_Q,
    SETTING_ID_DSP_RL_PEQ_BAND7_Q,
    SETTING_ID_DSP_RL_PEQ_BAND8_Q,
    SETTING_ID_DSP_RL_PEQ_BAND9_Q,
    SETTING_ID_DSP_RL_PEQ_BAND10_Q,            
    SETTING_ID_DSP_RL_PEQ_BAND11_Q,        

    //Rear Right
    SETTING_ID_DSP_RR_PEQ_BAND1_GAIN,        
    SETTING_ID_DSP_RR_PEQ_BAND2_GAIN,        
    SETTING_ID_DSP_RR_PEQ_BAND3_GAIN,
    SETTING_ID_DSP_RR_PEQ_BAND4_GAIN,
    SETTING_ID_DSP_RR_PEQ_BAND5_GAIN,
    SETTING_ID_DSP_RR_PEQ_BAND6_GAIN,
    SETTING_ID_DSP_RR_PEQ_BAND7_GAIN,        
    SETTING_ID_DSP_RR_PEQ_BAND8_GAIN,
    SETTING_ID_DSP_RR_PEQ_BAND9_GAIN,
    SETTING_ID_DSP_RR_PEQ_BAND10_GAIN,
    SETTING_ID_DSP_RR_PEQ_BAND11_GAIN,        

    SETTING_ID_DSP_RR_PEQ_BAND1_CEN_FREQ,    
    SETTING_ID_DSP_RR_PEQ_BAND2_CEN_FREQ,
    SETTING_ID_DSP_RR_PEQ_BAND3_CEN_FREQ,
    SETTING_ID_DSP_RR_PEQ_BAND4_CEN_FREQ,
    SETTING_ID_DSP_RR_PEQ_BAND5_CEN_FREQ,
    SETTING_ID_DSP_RR_PEQ_BAND6_CEN_FREQ,        
    SETTING_ID_DSP_RR_PEQ_BAND7_CEN_FREQ,
    SETTING_ID_DSP_RR_PEQ_BAND8_CEN_FREQ,
    SETTING_ID_DSP_RR_PEQ_BAND9_CEN_FREQ,
    SETTING_ID_DSP_RR_PEQ_BAND10_CEN_FREQ,
    SETTING_ID_DSP_RR_PEQ_BAND11_CEN_FREQ,    

    SETTING_ID_DSP_RR_PEQ_BAND1_Q,            
    SETTING_ID_DSP_RR_PEQ_BAND2_Q,
    SETTING_ID_DSP_RR_PEQ_BAND3_Q,
    SETTING_ID_DSP_RR_PEQ_BAND4_Q,
    SETTING_ID_DSP_RR_PEQ_BAND5_Q,            
    SETTING_ID_DSP_RR_PEQ_BAND6_Q,
    SETTING_ID_DSP_RR_PEQ_BAND7_Q,
    SETTING_ID_DSP_RR_PEQ_BAND8_Q,
    SETTING_ID_DSP_RR_PEQ_BAND9_Q,
    SETTING_ID_DSP_RR_PEQ_BAND10_Q,            
    SETTING_ID_DSP_RR_PEQ_BAND11_Q,            

    SETTING_ID_PEQ_INDEX_MAX
}PEQ_SETTING_INDEX_ENUM;



/********************************************************************************/

#define D_HMI_MSG_QUE_DEEP      10


#define _HMI_TASK_TIMING_              _4MS_
#define _HMI_CORE_TIMING_              _2MS_
#define _HMI_TASK_TICK_                _set_timing_xms_base_core_tick(_HMI_TASK_TIMING_)
#define _HMI_CORE_TICK_                _set_timing_xms_base_core_tick(_HMI_CORE_TIMING_)
#define _set_timing_xms_base_hmi_task_tick(x) ((x/_HMI_TASK_TIMING_)-1)
#define _set_timing_xms_base_hmi_core_tick(x) ((x/_HMI_CORE_TIMING_)-1)



#define _SendFullMsgToHMI(gid,sid,d0,d1,d2,d3) OS_PostFullMsgDir(&g_tHmiTaskCB,(uint16_t)(gid),(uint16_t)(sid),(uint8_t)(d0),(uint8_t)(d1),(uint8_t)(d2),(uint8_t)(d3))
#define _SendMsgToHMI(gid,sid,buf)             OS_PostMsgDir(&g_tHmiTaskCB,(uint16_t)(gid),(uint16_t)(sid),(void*)(buf))
#define _InsertMsgToHMI(gid,sid,buf)           OS_InsertMsgDir(&g_tHmiTaskCB,(uint16_t)(gid),(uint16_t)(sid),(void*)(buf),0)

typedef enum{
    BEEP_NONE,
    BEEP_SUCCESS,
    BEEP_FAIL,

    BEEP_N
}eBEEP_TYPE;

typedef struct{
	eSOURCE_ID CurAudioSource;
	eSOURCE_ID CurVideoSource;
	uint8_t PMState;
	uint8_t MediaState;
	uint8_t MediaDevFlag;
}sSYS_STATE_DBG_INFO;

_HMI_ sSYS_STATE_DBG_INFO g_tSysStateDbgInfo;
_HMI_ tTASK_CTRL_BLOCK g_tHmiTaskCB;

_HMI_ bool  HMI_TaskCreate(void);
_HMI_ void 	ReverseHandler(uint8_t flag);


#endif

